This file is a merged representation of the entire codebase, combined into a single document by Repomix.

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)

Additional Info:
----------------

================================================================
Directory Structure
================================================================
.gitattributes
.repomix/bundles.json
app.py
home.html
login.html
register.html
style.css

================================================================
Files
================================================================

================
File: .repomix/bundles.json
================
{
  "bundles": {}
}

================
File: .gitattributes
================
# Auto detect text files and perform LF normalization
* text=auto

================
File: app.py
================
from flask import Flask, render_template, request, redirect, session, url_for, flash
import csv
import sqlite3
import os

app = Flask(__name__)
app.secret_key = 'supersecretkey'
DATABASE = 'database.db'

# Ensure students.csv is loaded in memory
def load_eligible_students():
    with open('students.csv', newline='') as f:
        return {row['student_id']: row['name'] for row in csv.DictReader(f)}

eligible_students = load_eligible_students()

def init_db():
    if not os.path.exists(DATABASE):
        with sqlite3.connect(DATABASE) as conn:
            c = conn.cursor()
            c.execute('''CREATE TABLE users (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                student_id TEXT UNIQUE NOT NULL,
                name TEXT NOT NULL,
                password TEXT NOT NULL
            )''')
        print("Database initialized.")

@app.route('/')
def home():
    if 'student_id' in session:
        return render_template('home.html', name=session['name'])
    return redirect(url_for('login'))

@app.route('/register', methods=['GET', 'POST'])
def register():
    if request.method == 'POST':
        student_id = request.form['student_id']
        name = request.form['name']
        password = request.form['password']

        if student_id not in eligible_students:
            flash('Student not eligible to register.')
            return redirect(url_for('register'))

        try:
            with sqlite3.connect(DATABASE) as conn:
                c = conn.cursor()
                c.execute('INSERT INTO users (student_id, name, password) VALUES (?, ?, ?)',
                          (student_id, name, password))
                conn.commit()
                flash('Registered successfully! You can now log in.')
                return redirect(url_for('login'))
        except sqlite3.IntegrityError:
            flash('User already exists.')

    return render_template('register.html')

@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        student_id = request.form['student_id']
        password = request.form['password']

        with sqlite3.connect(DATABASE) as conn:
            c = conn.cursor()
            c.execute('SELECT name, password FROM users WHERE student_id = ?', (student_id,))
            result = c.fetchone()

            if result:
                db_name, db_password = result
                if db_password == password:
                    session['student_id'] = student_id
                    session['name'] = db_name
                    return redirect(url_for('home'))
                else:
                    flash('Incorrect password.')
            else:
                flash('Student ID not found.')

    return render_template('login.html')

@app.route('/logout')
def logout():
    session.clear()
    flash('Logged out.')
    return redirect(url_for('login'))

if __name__ == '__main__':
    init_db()
    app.run(debug=True)

================
File: home.html
================
<!doctype html>
<html>
<head>
  <title>Home</title>
  <link rel="stylesheet" href="{{ url_for('static', filename='styles.css') }}">
  <style>
    body {
      margin: 0;
      font-family: sans-serif;
      display: flex;
      height: 100vh;
    }
    .sidebar {
      background-color: #cc0000; /* IYTE red stripe */
      width: 80px;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      align-items: center;
      padding: 20px 0;
    }
    .sidebar img {
      width: 50px;
    }
    .logout-btn {
      background-color: #555;
      color: white;
      padding: 8px 12px;
      font-size: 14px;
      border: none;
      border-radius: 4px;
      text-decoration: none;
      margin-bottom: 10px;
    }
    .logout-btn:hover {
      background-color: #333;
    }
    .content {
      flex-grow: 1;
      display: flex;
      justify-content: center;
      align-items: center;
      background-color: #f9f9f9;
    }
  </style>
</head>
<body>
  <div class="sidebar">
    <img src="{{ url_for('static', filename='iyte-logo.png') }}" alt="İYTE Logo">
    <a href="{{ url_for('logout') }}" class="logout-btn">Logout</a>
  </div>
  <div class="content">
    <h2>Welcome, {{ name }}!</h2>
  </div>
</body>
</html>

================
File: login.html
================
<!doctype html>
<html>
<head>
  <title>Login</title>
  <style>
    body {
      font-family: sans-serif;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      background-color: #f0f4ff;
    }
    .container {
      text-align: center;
      background: white;
      padding: 30px;
      border-radius: 12px;
      box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }
    img {
      width: 120px;
      margin-bottom: 20px;
    }
    input {
      display: block;
      margin: 10px auto;
      padding: 8px;
      width: 80%;
    }
    .btn {
      display: inline-block;
      margin-top: 15px;
      padding: 10px 20px;
      font-size: 16px;
      font-weight: bold;
      border: none;
      border-radius: 4px;
      text-decoration: none;
      color: white;
      cursor: pointer;
    }
    .btn-blue {
      background-color: #007BFF;
    }
    .btn-blue:hover {
      background-color: #0056b3;
    }
    .btn-green {
      background-color: #28a745;
    }
    .btn-green:hover {
      background-color: #1e7e34;
    }
  </style>
</head>
<body>
<div class="container">
  <img src="{{ url_for('static', filename='iyte-logo.png') }}" alt="İYTE Logo">
  <h2>Login</h2>
  {% with messages = get_flashed_messages() %}
    {% if messages %}
      <ul style="color: red;">
      {% for message in messages %}
        <li>{{ message }}</li>
      {% endfor %}
      </ul>
    {% endif %}
  {% endwith %}
  <form method="post">
    <input type="text" name="student_id" placeholder="Student ID">
    <input type="password" name="password" placeholder="Password">
    <button type="submit" class="btn btn-blue">Login</button>
  </form>
  <a href="{{ url_for('register') }}" class="btn btn-green">Register</a>
</div>
</body>
</html>

================
File: register.html
================
<!doctype html>
<html>
<head>
  <title>Register</title>
  <style>
    body {
      font-family: sans-serif;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      background-color: #f0f4ff;
    }
    .container {
      text-align: center;
      background: white;
      padding: 30px;
      border-radius: 12px;
      box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }
    img {
      width: 120px;
      margin-bottom: 20px;
    }
    input {
      display: block;
      margin: 10px auto;
      padding: 8px;
      width: 80%;
    }
    .btn {
      display: inline-block;
      margin-top: 15px;
      padding: 10px 20px;
      font-size: 16px;
      font-weight: bold;
      border: none;
      border-radius: 4px;
      text-decoration: none;
      color: white;
      cursor: pointer;
    }
    .btn-blue {
      background-color: #007BFF;
    }
    .btn-blue:hover {
      background-color: #0056b3;
    }
    .btn-green {
      background-color: #28a745;
    }
    .btn-green:hover {
      background-color: #1e7e34;
    }
  </style>
</head>
<body>
<div class="container">
  <img src="{{ url_for('static', filename='iyte-logo.png') }}" alt="İYTE Logo">
  <h2>Register</h2>
  {% with messages = get_flashed_messages() %}
    {% if messages %}
      <ul style="color: red;">
      {% for message in messages %}
        <li>{{ message }}</li>
      {% endfor %}
      </ul>
    {% endif %}
  {% endwith %}
  <form method="post">
    <input type="text" name="student_id" placeholder="Student ID">
    <input type="text" name="name" placeholder="Name">
    <input type="password" name="password" placeholder="Password">
    <button type="submit" class="btn btn-blue">Register</button>
  </form>
  <a href="{{ url_for('login') }}" class="btn btn-green">Back to Login</a>
</div>
</body>
</html>

================
File: style.css
================
body {
  font-family: sans-serif;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  background-color: #f0f4ff;
}

.container {
  text-align: center;
  background: white;
  padding: 30px;
  border-radius: 12px;
  box-shadow: 0 0 10px rgba(0,0,0,0.1);
}

img {
  width: 120px;
  margin-bottom: 20px;
}

input {
  display: block;
  margin: 10px auto;
  padding: 8px;
  width: 80%;
}

.btn {
  display: inline-block;
  margin-top: 15px;
  padding: 10px 20px;
  font-size: 16px;
  font-weight: bold;
  border: none;
  border-radius: 4px;
  text-decoration: none;
  color: white;
  cursor: pointer;
}

.btn-blue {
  background-color: #007BFF;
}

.btn-blue:hover {
  background-color: #0056b3;
}

.btn-green {
  background-color: #28a745;
}

.btn-green:hover {
  background-color: #1e7e34;
}



================================================================
End of Codebase
================================================================
